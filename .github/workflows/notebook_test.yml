name: Notebook Test Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  session_6_run:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install jupyter nbconvert torch torchvision pytest numpy matplotlib tqdm torchsummary ipykernel

    - name: Convert and Execute Notebook
      run: |
        # Convert notebook to python script
        jupyter nbconvert --to python ERA_V3_Session_6.ipynb
        
        # Create a temporary file for modifications
        cat > temp_script.py << 'EOF'
        from __future__ import print_function
        import torch
        import torch.nn as nn
        import torch.optim as optim
        import torchvision
        import torchvision.transforms as transforms
        from torchsummary import summary
        from tqdm import tqdm
        import re

        def save_accuracy(log_line):
            if "Test set: Average loss:" in log_line:
                # Extract accuracy using regex
                match = re.search(r'Accuracy: \d+/\d+ \((\d+\.\d+)%\)', log_line)
                if match:
                    accuracy = float(match.group(1))
                    with open('final_accuracy.txt', 'w') as f:
                        f.write(str(accuracy))

        # Store the original print function
        original_print = print

        # Define a new print function that also checks for accuracy
        def custom_print(*args, **kwargs):
            line = " ".join(map(str, args))
            save_accuracy(line)
            original_print(*args, **kwargs)

        # Replace the built-in print function
        print = custom_print
        EOF
        
        # Append the converted notebook code after removing IPython commands and __future__ imports
        sed '/get_ipython\|from __future__/d' ERA_V3_Session_6.py >> temp_script.py
        
        # Replace original file with modified version
        mv temp_script.py era_v3_session_6.py
        
        # Execute the script
        python era_v3_session_6.py

    - name: Run Tests
      run: |
        pytest tests/test_model.py -v

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          final_accuracy.txt
          test-results.xml
        retention-days: 5